{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/crud.service\";\nimport * as i2 from \"@angular/common\";\nfunction AllEstatesComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const estate_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", estate_r3.id, \"\\n\");\n  }\n}\nfunction AllEstatesComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" Observable is loading. Please wait \");\n  }\n}\nexport class AllEstatesComponent {\n  constructor(estateService) {\n    this.estateService = estateService;\n    this.estates$ = this.estateService.getEstateList();\n    this.oneEstate$ = this.estateService.getEstate();\n  }\n  ngOnInit() {\n    this.getEstates();\n    // this.estates$.subscribe(c => c.forEach(e => console.log(e.payload.doc.data())));\n    this.ge$.subscribe(data => console.log(data));\n  }\n  getEstates() {\n    this.estateService.getEstateList().pipe(map(changes => changes.map(c => {\n      const fields = c.payload.doc.data();\n      // return Object.assign({ id: c.payload.doc.id }, c.payload.doc.data());\n      return {\n        ...fields,\n        id: c.payload.doc.id\n      };\n    }))).subscribe(data => {\n      this.estates = data;\n      console.log(this.estates);\n    });\n  }\n}\nAllEstatesComponent.ɵfac = function AllEstatesComponent_Factory(t) {\n  return new (t || AllEstatesComponent)(i0.ɵɵdirectiveInject(i1.CrudService));\n};\nAllEstatesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AllEstatesComponent,\n  selectors: [[\"app-all-estates\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"elseBlock\", \"\"]],\n  template: function AllEstatesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"all-estates works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, AllEstatesComponent_div_2_Template, 2, 1, \"div\", 0);\n      i0.ɵɵtemplate(3, AllEstatesComponent_ng_template_3_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.estates);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAqBA,GAAG,QAAQ,MAAM;;;;;;ICCtCC,2BAAoC;IAClCA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,8CACF;;;;;IAGyBA,oDAAmC;;;ADI5D,OAAM,MAAOC,mBAAmB;EAK9BC,YAAoBC,aAA0B;IAA1B,kBAAa,GAAbA,aAAa;IAJjC,aAAQ,GAAG,IAAI,CAACA,aAAa,CAACC,aAAa,EAAE;IAE7C,eAAU,GAAqB,IAAI,CAACD,aAAa,CAACE,SAAS,EAAE;EAEX;EAElDC,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE;IACjB;IACA,IAAI,CAACC,GAAG,CAACC,SAAS,CAACC,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;EAE/C;EAGAH,UAAU;IACR,IAAI,CAACJ,aAAa,CAACC,aAAa,EAAE,CAACS,IAAI,CACrCd,GAAG,CAACe,OAAO,IACTA,OAAO,CAACf,GAAG,CAACgB,CAAC,IAAG;MACd,MAAMC,MAAM,GAAQD,CAAC,CAACE,OAAO,CAACC,GAAG,CAACR,IAAI,EAAE;MACxC;MACA,OAAQ;QAAE,GAAGM,MAAM;QAAEG,EAAE,EAAEJ,CAAC,CAACE,OAAO,CAACC,GAAG,CAACC;MAAE,CAAE;IAC7C,CAAC,CACA,CACF,CACF,CAACV,SAAS,CAACC,IAAI,IAAG;MACjB,IAAI,CAACU,OAAO,GAAGV,IAAI;MACnBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACQ,OAAO,CAAC;IAE3B,CAAC,CAAC;EACJ;;AA9BWnB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXhCzB,yBAAG;MAAAA,kCAAkB;MAAAA,iBAAI;MAEzBA,oEAEM;MAGNA,qHAA0E;;;MALlDA,eAAU;MAAVA,qCAAU","names":["map","i0","AllEstatesComponent","constructor","estateService","getEstateList","getEstate","ngOnInit","getEstates","ge$","subscribe","data","console","log","pipe","changes","c","fields","payload","doc","id","estates","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\SoftwareUniProjectsRepository\\ngEstates\\ngEstates\\src\\app\\estates\\all-estates\\all-estates.component.ts","C:\\Users\\HP\\Desktop\\SoftwareUniProjectsRepository\\ngEstates\\ngEstates\\src\\app\\estates\\all-estates\\all-estates.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable, map } from 'rxjs';\nimport { CrudService } from 'src/app/shared/crud.service';\nimport { Estate } from 'src/app/shared/estate';\n\n@Component({\n  selector: 'app-all-estates',\n  templateUrl: './all-estates.component.html',\n  styleUrls: ['./all-estates.component.css']\n})\n\nexport class AllEstatesComponent implements OnInit {\n  estates$ = this.estateService.getEstateList();\n  estates!: any;\n  oneEstate$!: Observable<any> = this.estateService.getEstate();\n\n  constructor(private estateService: CrudService) { }\n\n  ngOnInit(): void {\n    this.getEstates();\n    // this.estates$.subscribe(c => c.forEach(e => console.log(e.payload.doc.data())));\n    this.ge$.subscribe(data => console.log(data));\n\n  }\n\n\n  getEstates(): void {\n    this.estateService.getEstateList().pipe(\n      map(changes =>\n        changes.map(c => {\n          const fields: any = c.payload.doc.data();\n          // return Object.assign({ id: c.payload.doc.id }, c.payload.doc.data());\n          return ({ ...fields, id: c.payload.doc.id })\n        }\n        )\n      )\n    ).subscribe(data => {\n      this.estates = data;\n      console.log(this.estates);\n\n    });\n  }\n}\n","<p>all-estates works!</p>\n<!-- <div *ngIf=\"estates; else elseBlock\"> -->\n<div *ngFor=\"let estate of estates\">\n  {{ estate.id }}\n</div>\n<!-- </div> -->\n\n<ng-template #elseBlock> Observable is loading. Please wait </ng-template>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}