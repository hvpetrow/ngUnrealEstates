{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nexport class CrudService {\n  constructor(db) {\n    this.db = db;\n  }\n  addEstate(estate) {\n    // this.estatesRef.push({\n    //   firstName: estate.firstName,\n    //   lastName: estate.lastName,\n    //   email: estate.email,\n    // });\n  }\n  // Fetch Single estate Object\n  getEstate(id) {\n    this.estateRef = this.db.collection().doc('estates/' + id);\n    return this.estateRef.valueChanges();\n  }\n  // Fetch estates List\n  getEstateList() {\n    // this.estatesRef = this.db.list('estates');\n    // console.log(this.estatesRef.valueChanges().subscribe(data => console.log(data)\n    // ));\n    // return this.estatesRef;\n    return this.estatesRef = this.db.collection('estates').snapshotChanges();\n  }\n  // Update estate Object\n  updateEstate(estate) {\n    this.estateRef.update({\n      firstName: estate.firstName,\n      lastName: estate.lastName,\n      email: estate.email\n    });\n  }\n  // Delete estate Object\n  deleteEstate(id) {\n    // this.estateRef = this.db.object('estates/' + id);\n    // this.estateRef.remove();\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.AngularFirestore));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,EAAoB;IAApB,OAAE,GAAFA,EAAE;EAAsB;EAE5CC,SAAS,CAACC,MAAc;IACtB;IACA;IACA;IACA;IACA;EAAA;EAGF;EACAC,SAAS,CAACC,EAAU;IAClB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,EAAE,CAACM,UAAU,EAAE,CAACC,GAAG,CAAC,UAAU,GAAGH,EAAE,CAAC;IAC1D,OAAO,IAAI,CAACC,SAAS,CAACG,YAAY,EAAE;EACtC;EACA;EACAC,aAAa;IACX;IACA;IACA;IAEA;IACA,OAAO,IAAI,CAACC,UAAU,GAAG,IAAI,CAACV,EAAE,CAACM,UAAU,CAAC,SAAS,CAAC,CAACK,eAAe,EAAE;EAC1E;EACA;EACAC,YAAY,CAACV,MAAc;IACzB,IAAI,CAACG,SAAS,CAACQ,MAAM,CAAC;MACpBC,SAAS,EAAEZ,MAAM,CAACY,SAAS;MAC3BC,QAAQ,EAAEb,MAAM,CAACa,QAAQ;MACzBC,KAAK,EAAEd,MAAM,CAACc;KACf,CAAC;EACJ;EACA;EACAC,YAAY,CAACb,EAAU;IACrB;IACA;EAAA;;AAvCSN,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["CrudService","constructor","db","addEstate","estate","getEstate","id","estateRef","collection","doc","valueChanges","getEstateList","estatesRef","snapshotChanges","updateEstate","update","firstName","lastName","email","deleteEstate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\SoftwareUniProjectsRepository\\ngEstates\\ngEstates\\src\\app\\shared\\crud.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Estate } from './estate';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/compat/firestore';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n  estatesRef!: Observable<any[]>;\n  estateRef!: AngularFirestoreDocument<any>;\n\n  constructor(private db: AngularFirestore) { }\n\n  addEstate(estate: Estate) {\n    // this.estatesRef.push({\n    //   firstName: estate.firstName,\n    //   lastName: estate.lastName,\n    //   email: estate.email,\n    // });\n  }\n\n  // Fetch Single estate Object\n  getEstate(id: string) {\n    this.estateRef = this.db.collection().doc('estates/' + id);\n    return this.estateRef.valueChanges();\n  }\n  // Fetch estates List\n  getEstateList() {\n    // this.estatesRef = this.db.list('estates');\n    // console.log(this.estatesRef.valueChanges().subscribe(data => console.log(data)\n    // ));\n\n    // return this.estatesRef;\n    return this.estatesRef = this.db.collection('estates').snapshotChanges();\n  }\n  // Update estate Object\n  updateEstate(estate: Estate) {\n    this.estateRef.update({\n      firstName: estate.firstName,\n      lastName: estate.lastName,\n      email: estate.email,\n    });\n  }\n  // Delete estate Object\n  deleteEstate(id: string) {\n    // this.estateRef = this.db.object('estates/' + id);\n    // this.estateRef.remove();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}